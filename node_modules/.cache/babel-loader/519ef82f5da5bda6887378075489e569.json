{"ast":null,"code":"var _jsxFileName = \"/Users/peiyuanp/Desktop/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/peiyuanp/Desktop/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","render","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAC;AADF,KADoB;AAAA;;AAK5BC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,kBAAO,KAAKC,WAAL;AAAP;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAEDA,EAAAA,WAAW,GAAG;AACV,UAAM;AAACF,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,WAAOC,KAAK,KAAI,CAAT,GAAa,MAAb,GAAqBA,KAA5B;AACH;;AAjB2B;;AAoBhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        count:0,\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <span>{this.formatCount()}</span>\n                <button>Increment</button>\n            </React.Fragment>\n        )\n    }\n\n    formatCount() {\n        const {count} = this.state;\n        return count=== 0 ? 'Zero': count;\n    }\n}\n\nexport default Counter;\n "]},"metadata":{},"sourceType":"module"}